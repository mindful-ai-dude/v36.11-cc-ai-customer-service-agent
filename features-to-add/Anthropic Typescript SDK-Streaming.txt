________________

ANTHOPIC STREAMING 
________________

Anthropic Typescript SDK - Streaming
________________




import Anthropic from '@anthropic-ai/sdk';


const client = new Anthropic(); // gets API Key from environment variable ANTHROPIC_API_KEY


async function main() {
  const stream = client.messages
    .stream({
      messages: [
        {
          role: 'user',
          content: `Hey Claude! How can I recursively list all files in a directory in Rust?`,
        },
      ],
      model: 'claude-3-5-sonnet-latest',
      max_tokens: 1024,
    })
    // Once a content block is fully streamed, this event will fire
    .on('contentBlock', (content) => console.log('contentBlock', content))
    // Once a message is fully streamed, this event will fire
    .on('message', (message) => console.log('message', message));


  for await (const event of stream) {
    console.log('event', event);
  }


  const message = await stream.finalMessage();
  console.log('finalMessage', message);
}


main().catch((err) => {
  console.error(err);
  process.exit(1);
});


________________


Anthropic Typescript SDK - Raw-Streaming
________________




import Anthropic from '@anthropic-ai/sdk';


const client = new Anthropic(); // gets API Key from environment variable ANTHROPIC_API_KEY


async function main() {
  const stream = await client.messages.create({
    model: 'claude-3-5-sonnet-latest',
    stream: true,
    max_tokens: 500,
    messages: [
      {
        role: 'user',
        content: 'Hey Claude!',
      },
    ],
  });


  for await (const event of stream) {
    if (event.type === 'content_block_delta' && event.delta.type === 'text_delta') {
      process.stdout.write(event.delta.text);
    }
  }
  process.stdout.write('\n');
}


main();


________________


Anthropic Typescript SDK - Tools-Streaming
________________


import Anthropic from '@anthropic-ai/sdk';
import { inspect } from 'util';


// gets API Key from environment variable ANTHROPIC_API_KEY
const client = new Anthropic();


async function main() {
  const stream = client.messages
    .stream({
      messages: [
        {
          role: 'user',
          content: `What is the weather in SF?`,
        },
      ],
      tools: [
        {
          name: 'get_weather',
          description: 'Get the weather at a specific location',
          input_schema: {
            type: 'object',
            properties: {
              location: { type: 'string', description: 'The city and state, e.g. San Francisco, CA' },
              unit: {
                type: 'string',
                enum: ['celsius', 'fahrenheit'],
                description: 'Unit for the output',
              },
            },
            required: ['location'],
          },
        },
      ],
      model: 'claude-3-5-sonnet-latest',
      max_tokens: 1024,
    })
    // When a JSON content block delta is encountered this
    // event will be fired with the delta and the currently accumulated object
    .on('inputJson', (delta, snapshot) => {
      console.log(`delta: ${delta}`);
      console.log(`snapshot: ${inspect(snapshot)}`);
      console.log();
    });


  await stream.done();
}


main();